#!/bin/bash
#set -ex
#===================================================================================================
#
# bizdate command
#
#===================================================================================================
#---------------------------------------------------------------------------------------------------
# 設定
#---------------------------------------------------------------------------------------------------
dir_script="$(dirname $0)"
cd "$(cd ${dir_script}; pwd)"

readonly STFW_HOME="$(cd ../..; pwd)"
. "${STFW_HOME}/bin/lib/setenv"
. "${DIR_BIN_LIB}/stfw/adapter/cli/bizdate_controller"

readonly PROGNAME="stfw $(basename $0)"


#---------------------------------------------------------------------------------------------------
# 関数定義
#---------------------------------------------------------------------------------------------------
function private.description() {
  echo "  $(basename $0) : scenario-bizdate control"
}


function private.usage() {
  cat << __EOT__ >&2
usage: ${PROGNAME} [options...]

options:
  -i, --init <seq> <bizdate> : generate scaffold to current directory (bizdate format: YYYYMMDD)
  -g, --generate-dig         : generate workflow definition from current directory structure
  -s, --setup <exec-dir>     : run setup scripts
  -t, --teardown <exec-dir>  : run teardown scripts

__EOT__
  exit ${EXITCODE_ERROR}
}



#---------------------------------------------------------------------------------------------------
# オプション解析
#---------------------------------------------------------------------------------------------------
# 実行コマンド
cmd=""
# 業務日付実行ディレクトリ
trg_bizdate_dir=""

while :; do
  case $1 in
    --description)
      private.description
      exit ${EXITCODE_ERROR}
      ;;

    -h|--help)
      private.usage
      ;;

    -i|--init)
      if [[ $# -lt 3 ]]; then private.usage; fi
      cmd="init"

      # 連番
      seq="$2"

      # 業務日付
      bizdate="$3"
      shift 3
      break
      ;;

    -g|--generate-dig)
      cmd="generate-dig"
      shift
      break
      ;;

    -s|--setup)
      if [[ $# -lt 2 ]]; then private.usage; fi
      cmd="setup"

      # 業務日付ディレクトリ
      trg_bizdate_dir="$2"
      shift 2
      break
      ;;

    -t|--teardown)
      if [[ $# -lt 2 ]]; then private.usage; fi
      cmd="teardown"

      # 業務日付ディレクトリ
      trg_bizdate_dir="$2"
      shift 2
      break
      ;;

    --)
      shift
      break
      ;;

    *)
      break
      ;;
  esac
done


#---------------------------------------------------------------------------------------------------
# コマンド実行
#---------------------------------------------------------------------------------------------------
stfw.log.script_start "${PROGNAME} ${cmd}"

case ${cmd} in
  init)
    stfw.adapter.cli.bizdate.init "${seq}" "${bizdate}" 2>&1 | log.tee
    exitcode=${PIPESTATUS[0]}
    ;;
  generate-dig)
    stfw.adapter.cli.bizdate.generate_dig 2>&1 | log.tee
    exitcode=${PIPESTATUS[0]}
    ;;
  setup)
    stfw.adapter.cli.bizdate.setup "${trg_bizdate_dir}" 2>&1 | log.tee
    exitcode=${PIPESTATUS[0]}
    ;;
  teardown)
    stfw.adapter.cli.bizdate.teardown "${trg_bizdate_dir}" 2>&1 | log.tee
    exitcode=${PIPESTATUS[0]}
    ;;
  *)
    private.usage
    ;;
esac

stfw.log.script_end "${PROGNAME} ${cmd}" "${exitcode}"
exit ${exitcode}
