#!/bin/bash
#set -ex
#===================================================================================================
#
# scenario runner
#
#===================================================================================================
#---------------------------------------------------------------------------------------------------
# 設定
#---------------------------------------------------------------------------------------------------
dir_script="$(dirname $0)"
cd "$(cd ${dir_script}; pwd)"

readonly STFW_HOME="$(cd ../..; pwd)"
. "${STFW_HOME}/bin/lib/setenv"
. "${DIR_BIN_LIB}/stfw/adapter/cli/run_controller"

readonly PROGNAME="stfw $(basename $0)"


#---------------------------------------------------------------------------------------------------
# 関数定義
#---------------------------------------------------------------------------------------------------
function private.description() {
  echo "  $(basename $0) <scenario-names...> : run a scenario"
}


function private.usage() {
  cat << __EOT__ >&2
usage: ${PROGNAME} [options...] <scenario-names...>

options:
  -d, --dry-run                       : dry-run mode doesn't execute tasks
  -f, --follow                        : show new logs until attempt or task finishes
  -s, --setup <scenario-names...>     : run setup scripts
  -t, --teardown <scenario-names...>  : run teardown scripts

__EOT__
  exit ${EXITCODE_ERROR}
}


#---------------------------------------------------------------------------------------------------
# オプション解析
#---------------------------------------------------------------------------------------------------
# 実行コマンド
cmd="run_on_server"
# run opt
run_opt="--run"
# log followモード
is_follow="false"

while :; do
  case $1 in
    --description)
      private.description
      exit ${EXITCODE_ERROR}
      ;;

    -h|--help)
      private.usage
      ;;

    -s|--setup)
      cmd="setup"
      shift
      break
      ;;

    -t|--teardown)
      cmd="teardown"
      shift
      break
      ;;

    -d|--dry-run)
      run_opt="--dry-run"
      shift
      break
      ;;

    -f|--follow)
      is_follow="true"
      shift
      ;;

    --)
      shift
      break
      ;;

    *)
      break
      ;;
  esac
done

# 引数チェック
if [[ $# -lt 1 ]]; then
  private.usage
fi

# シナリオリスト
target_scenarios=( "$*" )

#---------------------------------------------------------------------------------------------------
# コマンド実行
#---------------------------------------------------------------------------------------------------
stfw.log.script_start "${PROGNAME} ${cmd}"


case ${cmd} in
  run_on_server)
    stfw.adapter.cli.run.run_on_server "${run_opt}" "${is_follow}" "${target_scenarios[@]}" 2>&1 | log.tee
    exitcode=${PIPESTATUS[0]}
    ;;

  setup)
    stfw.adapter.cli.run.setup 2>&1 | log.tee
    exitcode=${PIPESTATUS[0]}
    ;;

  teardown)
    stfw.adapter.cli.run.teardown 2>&1 | log.tee
    exitcode=${PIPESTATUS[0]}
    ;;

  *)
    private.usage
    ;;
esac

stfw.log.script_end "${PROGNAME} ${cmd}" "${exitcode}"
exit ${exitcode}
