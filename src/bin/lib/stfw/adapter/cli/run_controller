#!/bin/bash
#===================================================================================================
#
# run controller
#
#===================================================================================================
. "${DIR_BIN_LIB}/stfw/usecase/run/run_inputport"
. "${DIR_BIN_LIB}/stfw/usecase/run/run_outputport"


function stfw.adapter.cli.run.run_on_server() {
  stfw.log.func_start_debug "$@"
  local _run_opt="${1:?}"
  local _is_follow="${2:?}"
  shift 2
  local _target_scenarios=( "$@" )

  # usecase input
  stfw.usecase.inputport.run.run_on_server_requested                                               \
    "${_run_opt}" "${_is_follow}" "${_target_scenarios[@]}"
  local _retcode=$?

  # usecase output
  stfw.usecase.outputport.run.run_on_server_finished "${_retcode}"                                 \
    "${_run_opt}" "${_is_follow}" "${_target_scenarios[@]}"
  _retcode=$?

  stfw.log.func_end_debug ${_retcode}
  return ${_retcode}
}


function stfw.adapter.cli.run.setup() {
  stfw.log.func_start_debug

  # usecase input
  stfw.usecase.inputport.run.setup_requested
  local _retcode=$?

  # usecase output
  stfw.usecase.outputport.run.setup_finished "${_retcode}"

  stfw.log.func_end_debug ${_retcode}
  return ${_retcode}
}


function stfw.adapter.cli.run.teardown() {
  stfw.log.func_start_debug

  # usecase input
  stfw.usecase.inputport.run.teardown_requested
  local _retcode=$?

  # usecase output
  stfw.usecase.outputport.run.teardown_finished "${_retcode}"

  stfw.log.func_end_debug ${_retcode}
  return ${_retcode}
}
